import matplotlib.pyplot as plt


def to_decimal(number_array, base):
    conversion = 0.00390625

    converted_list = []
    converted_string = ''
    for number in number_array:
        binary = '{:016b}'.format(int(number, base))
        if (binary[0] == '1'):
            decimal = int(number[1:], base)
            converted = -1 * (decimal * conversion)
        else:
            decimal = int(number, base)
            converted = decimal * conversion

        converted_list.append(converted)
        converted_string += f'{converted} '

    return converted_list, converted_string


coeffs_10 = [
    '0000000000000011',
    '0000000000001001',
    '0000000000010111',
    '0000000000101000',
    '0000000000110010',
    '0000000000110010',
    '0000000000101000',
    '0000000000010111',
    '0000000000001001',
    '0000000000000011'
]

print('-'*175)
print(f'10 Coefficients:\n{to_decimal(coeffs_10, 2)}\n')
print('-'*175)


coeffs_16 = [
    '0000000000000010',
    '0000000000000011',
    '0000000000000110',
    '0000000000001100',
    '0000000000010010',
    '0000000000011000',
    '0000000000011101',
    '0000000000011111',
    '0000000000011111',
    '0000000000011101',
    '0000000000011000',
    '0000000000010010',
    '0000000000001100',
    '0000000000000110',
    '0000000000000011',
    '0000000000000010'
]

print('-'*175)
print(f'16 Coefficients:\n{to_decimal(coeffs_16, 2)[1]}\n')
print('-'*175)


coeffs_20 = [
    '0000000000000001',
    '0000000000000010',
    '0000000000000011',
    '0000000000000110',
    '0000000000001010',
    '0000000000001110',
    '0000000000010010',
    '0000000000010101',
    '0000000000011000',
    '0000000000011001',
    '0000000000011001',
    '0000000000011000',
    '0000000000010101',
    '0000000000010010',
    '0000000000001110',
    '0000000000001010',
    '0000000000000110',
    '0000000000000011',
    '0000000000000010',
    '0000000000000001'
]

print('-'*175)
print(f'20 Coefficients:\n{to_decimal(coeffs_20, 2)[1]}\n')
print('-'*175)


samples = [
    '0000000001010010',
    '0000000001110101',
    '1000000000110111',
    '0000000010010001',
    '0000000001111010',
    '0000000010001001',
    '0000000111111010',
    '0000000000010011',
    '0000000110011001',
    '0000000000111000',
    '0000000010101011',
    '0000000011100110',
    '0000000011010000',
    '0000000011101000',
    '0000000011110011',
    '0000000000110100',
    '0000000101001011',
    '1000000001001111',
    '0000000010000011',
    '0000000011001011',
    '0000000011010000',
    '1000000100010000',
    '1000000001001111',
    '0000000001001010',
    '1000000001110110',
    '0000000000010000',
    '1000000001110011',
    '1000000001101110',
    '1000000101101101',
    '1000000011000001',
    '0000000000100101',
    '1000000001011100',
    '1000000001000001',
    '1000000101011110',
    '1000000010011011',
    '1000000011000000',
    '1000000010101011',
    '1000000100001110',
    '1000000010110100',
    '0000000000110000',
    '1000000011111100',
    '1000000100100000',
    '1000000000001011',
    '1000000000100111',
    '1000000000011111',
    '0000000000011011',
    '0000000001110000',
    '1000000010001011'
]

print('-'*175)
print(f'{len(samples)} Samples:\n{to_decimal(samples, 2)[1]}')
print('-'*175)


coeffs_10_sim_result = [
    '0000', '0003', '000b', '0016', '0024',
    '0030', '0041', '005b', '007d', '00a5',
    '00c5', '00d5', '00d3', '00c4', '00bc',
    '00ba', '00be', '00c0', '00ba', '00ab',
    '0094', '0082', '0073', '005a', '0037',
    '0014', '800e', '8027', '8033', '803f',
    '805b', '807b', '808e', '8091', '8084',
    '807c', '8081', '8097', '80ad', '80b9',
    '80bb', '80af', '80a4', '809a', '8092',
    '8082', '806d', '804d', '8025', '800d'
]

print('-'*175)
print(
    f'10 Coefficients Simulation Results:\n{to_decimal(coeffs_10_sim_result, 16)[1]}')
print('-'*175)


coeffs_16_sim_result = [
    '0000', '0000', '0002', '0006', '000a',
    '0012', '001c', '0028', '003a', '0050',
    '0065', '007e', '0093', '00a5', '00b3',
    '00bc', '00c0', '00c1', '00bf', '00b7',
    '00b4', '00a8', '009e', '0092', '007c',
    '0064', '004e', '0033', '001a', '0001',
    '8019', '8030', '804b', '805b', '8068',
    '8072', '807c', '8087', '808d', '8092',
    '8099', '809d', '80a1', '80a4', '80a3',
    '809c', '8092', '8086', '8070', '805c'
]

print('-'*175)
print(
    f'16 Coefficients Simulation Results:\n{to_decimal(coeffs_16_sim_result, 16)[1]}')
print('-'*175)


coeffs_20_sim_result = [
    '0000', '0000', '0000', '0002', '0006',
    '0008', '000f', '0016', '0021', '0031',
    '003f', '0052', '0066', '0077', '008a',
    '0097', '00a6', '00af', '00b3', '00ba',
    '00b6', '00b2', '00a8', '009f', '0098',
    '0085', '0073', '0062', '0049', '0032',
    '001a', '0001', '8018', '802c', '803f',
    '804f', '805f', '806c', '8077', '8083',
    '8088', '8090', '8094', '8099', '8099',
    '8098', '8097', '8092', '8089', '807a'
]

print('-'*175)
print(
    f'20 Coefficients Simulation Results:\n{to_decimal(coeffs_20_sim_result, 16)[1]}')
print('-'*175)


fig, axs = plt.subplots(2, 2)

axs[0, 0].plot(to_decimal(samples, 16)[0])
axs[0, 0].set_title('Se単al con ruido')

axs[0, 1].plot(to_decimal(coeffs_10_sim_result, 16)[0])
axs[0, 1].set_title('Se単al filtrada con 10 coeficientes')

axs[1, 0].plot(to_decimal(coeffs_16_sim_result, 16)[0])
axs[0, 1].set_title('Se単al filtrada con 16 coeficientes')

axs[1, 1].plot(to_decimal(coeffs_20_sim_result, 16)[0])
axs[0, 1].set_title('Se単al filtrada con 20 coeficientes')

plt.tight_layout()
plt.show()
